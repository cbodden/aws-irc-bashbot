function loop()
{
    CHANNEL=
    NAME=

    while read -r LINE
    do
        # strip trailing carriage return
        LINE=${LINE%%$'\r'}

        RECV "$LINE"
        set -- $LINE

        case "$1" in
            :*)
                # turn: :nickname!example.host.com into: nickname
                NAME=${1%%!*}
                NAME=${NAME#:}
                shift
                ;;
        esac

        case "$@" in
            "PING "*)
                _SERVER="$2"
                SEND "PONG ${_SERVER}"
                continue
                ;;
            "PRIVMSG ${CHAN} :${NICK}: "*)
                ## direct message in chan
                SEND "PRIVMSG ${CHAN} :${NAME}: MSG in chan until fixed."
                continue
                ;;
            "PRIVMSG ${NICK} :"*)
                ## direct message
                if [[ "${2}" == "${NICK}" ]]
                then
                    if [[ "${3}" == ":${OWNER_PW}" ]]
                    then
                        SEND "PRIVMSG ${NAME} :MSG in chan until fixed."
                    fi
                fi
                continue
                ;;
            "PRIVMSG ${CHAN} :"*)
                ## global in chan
                CHANNEL=$2
                CMD=${3#:}
                ARG=${@:4}
                if [[ ${CMD} = .* ]]
                then
                    declare -a _LIB=($(\
                        for _ELL in lib/*
                        do
                            _ELL=${_ELL#*/}
                            _ELL=${_ELL%.*}
                            echo ${_ELL}
                        done))
                        for LIB in "${_LIB[@]}"
                        do
                            if [[ ".${LIB}" == "${CMD}" ]]
                            then
                                source lib/${LIB}.shlib
                                ${CMD}
                            fi
                        done
                    fi
                    continue
                    ;;
                *)
                    continue
                    ;;
            esac
        done <&3
    }
