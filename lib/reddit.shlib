# help text - display top 100 titles and urls for subreddit
function .reddit()
{
    >${TMP_FILE1}

    source ${PROGDIR}/core/chan_text_out.shlib

    if [[ -n "${ARG}" ]]
    then
        read -r -a _ARG <<< "${ARG}"
    else
        local _ARG=""
    fi

    local _RDDTPATH="${PROGDIR}/misc/"
    local _RDDTFILE="${_ARG[1]}.rddt"
    local RDDTFILE="${_RDDTPATH}${_RDDTFILE}"
    local _ADDY="https://www.reddit.com/r/"
    local _R_ADDY="/top.json?sort=top&t=week&limit=100"

    if [[ ! -d "${_RDDTPATH}" ]]
    then
        mkdir ${_RDDTPATH}
    fi

    function _rddt_list()
    {
        local _CNT=1
        printf "%s\n" \
            "Here is the list of subreddits stored: "\
            | tee -a  ${TMP_FILE1} > /dev/null
        for _LIST in ${_RDDTPATH}*.rddt
        do
            _LIST=${_LIST##*/}
            _LIST=${_LIST%.*}
            printf "%s\n" \
                "[${_CNT}] ${_LIST}" \
                | tee -a ${TMP_FILE1} > /dev/null
            let _CNT=_CNT+1
        done
        _chan_text_out
    }

    if [[ ${#_ARG[@]} -ge 1 ]]
    then
        case "${_ARG[0]}" in
            'list'|'li'|'lis')
                _rddt_list
                ;;

            'random'|'ra'|'rndm')
                if [[ -z "${_ARG[1]}" ]]
                then
                    _rddt_list
                    break 1
                fi

                local _RDDT_RA=()
                local _RA_LIST=()

                declare -a _RDDT_RA=($( \
                    for _RA_LIST in ${_RDDTPATH}*.rddt
                    do
                        _RA_LIST=${_RA_LIST##*/}
                        _RA_LIST=${_RA_LIST%.*}
                        echo ${_RA_LIST}
                    done))

                    case ${_ARG[2]} in
                        ''|*[!0-9]*)
                            local _RDDTFILE="${_RDDT_RA[${_ARG[2]}]}"
                            local RDDTFILE="${_RDDTPATH}${_RDDTFILE}.rddt"
                            ;;
                        *)
                            local _RDDTFILE="${_ARG[2]}"
                            local RDDTFILE="${_RDDTPATH}${_ARG[2]}.rddt"
                            ;;
                    esac

                    if [[ ! -e ${RDDTFILE} ]]
                    then
                        local _CHECK="$(curl \
                            -A "${PROGNAME} $(date +"%Y%m%e_%H%M%S" \
                            | tr ' ' '0')" \
                            -Is ${_ADDY}${_RDDTFILE} \
                            | head -1)"

                        if [[ "${_CHECK}" == "HTTP/1.1 200"* ]]
                        then
                            curl \
                                -s -A "${PROGNAME} $(uname)" \
                                --connect-timeout 5 \
                                ${_ADDY}${_RDDTFILE}${_R_ADDY} \
                                | python -m json.tool \
                                | grep -E 'title|url' \
                                | sed \
                                -e 's/^[ \t]*//' \
                                -e 's/,$//g' \
                                -e '0~2 a\\' \
                                -e 's/"//g' \
                                | tee -a ${RDDTFILE} > /dev/null
                            sed -i \
                                -e '/^ *$/d' \
                                ${RDDTFILE}
                        else
                            find ${RDDTFILE} \
                                -mindepth 1 \
                                -mtime +7 \
                                -delete \
                                || true
                        fi
                    fi

                    local _RDDT=()
                    readarray _RDDT < ${RDDTFILE}
                    local INDEX=$(($RANDOM%${#_RDDT[@]}-1))

                    if [ $((${INDEX}%2)) -ne 0 ]
                    then
                        let INDEX=INDEX-1
                    fi

                    printf "%s" \
                        "${_RDDT[${INDEX}]}" \
                        "${_RDDT[$((${INDEX}+1))]}" \
                        | tee -a ${TMP_FILE1} > /dev/null
                    _chan_text_out

                    ;;

                'remove'|'del'|'rm')
                    if [[ -z "${_ARG[1]}" ]]
                    then
                        _rddt_list
                        break 1
                    else
                        local _RDDT_RM=()
                        local _RM_LIST=()
                        declare -a _RDDT_RM=($( \
                            for _RM_LIST in ${_RDDTPATH}*.rddt
                            do
                                _RM_LIST=${_RM_LIST##*/}
                                _RM_LIST=${_RM_LIST%.*}
                                echo ${_RM_LIST}
                            done))
                        case ${_ARG[2]} in
                            ''|*[!0-9]*)
                                rm ${_RDDTPATH}${_RDDT_RM[${_ARG[2]}]}.rddt
                                printf "%s\n" \
                                    "deleted ${_RDDT_RM[${_ARG[2]}]}" \
                                    | tee -a ${TMP_FILE1} > /dev/null
                                _chan_text_out
                                ;;
                            *)
                                rm ${_RDDTPATH}${_ARG[2]}.rddt
                                printf "%s\n" \
                                    "deleted ${_ARG[2]}" \
                                    | tee -a ${TMP_FILE1} > /dev/null
                                _chan_text_out
                                ;;
                        esac
                    fi
                    ;;

                    *)
                        printf "%s\n" \
                            "[li]st                 : show stored subreddits" \
                            "[ra]ndom <subreddit #> : display rand subreddit topic" \
                            "[rm] <subreddit #>     : delete stored subreddit file" \
                            | tee -a ${TMP_FILE1} > /dev/null
                        _chan_text_out
                        ;;
                esac
            fi
            unset _rddt_list
        }
